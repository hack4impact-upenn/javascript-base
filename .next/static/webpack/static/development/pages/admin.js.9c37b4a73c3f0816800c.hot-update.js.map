{"version":3,"file":"static/webpack/static/development/pages/admin.js.9c37b4a73c3f0816800c.hot-update.js","sources":["webpack:///./components/Usertable.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\n\nconst styles = theme => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  },\n  tableRow: {\n    cursor: \"pointer\"\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: \"initial\"\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? \"right\"\n            : \"left\"\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(\n          classes.tableCell,\n          classes.flexContainer,\n          classes.noClick\n        )}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            headerHeight={headerHeight}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\n// ---\n\nconst sample = [\n  [\"Frozen yoghurt\", 159, 6.0, 24, 4.0],\n  [\"Ice cream sandwich\", 237, 9.0, 37, 4.3],\n  [\"Eclair\", 262, 16.0, 24, 6.0],\n  [\"Cupcake\", 305, 3.7, 67, 4.3],\n  [\"Gingerbread\", 356, 16.0, 49, 3.9]\n];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return { id, dessert, calories, fat, carbs, protein };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData(i, ...randomSelection));\n}\n\nexport default function ReactVirtualizedTable() {\n  return (\n    <Paper style={{ height: 500, padding: 20, margin: 20 }}>\n      <VirtualizedTable\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n          {\n            width: \"20%\",\n            label: \"Dessert\",\n            dataKey: \"dessert\"\n          },\n          {\n            width: \"20%\",\n            label: \"Calories\\u00A0(g)\",\n            dataKey: \"calories\",\n            numeric: true\n          },\n          {\n            width: \"20%\",\n            label: \"Fat\\u00A0(g)\",\n            dataKey: \"fat\",\n            numeric: true\n          },\n          {\n            width: \"20%\",\n            label: \"Carbs\\u00A0(g)\",\n            dataKey: \"carbs\",\n            numeric: true\n          },\n          {\n            width: \"20%\",\n            label: \"Protein\\u00A0(g)\",\n            dataKey: \"protein\",\n            numeric: true\n          }\n        ]}\n      />\n    </Paper>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AACA;AADA;AAGA;AACA;AADA;AAjBA;AAAA;AACA;AAqBA;;;;;;;;;;;;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AAFA;AADA;AAMA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAzBA;AA8BA;;;;AA/FA;AACA;AADA;AAEA;AACA;AAFA;AACA;AAgGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAZA;AAeA;AACA;AAGA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;;;;A","sourceRoot":""}