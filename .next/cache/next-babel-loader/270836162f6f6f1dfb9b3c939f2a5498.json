{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danieltian/Desktop/Hack4Impact/javascript-base/components/Usertable.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\n\nvar styles = function styles(theme) {\n  return {\n    flexContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      boxSizing: \"border-box\"\n    },\n    tableRow: {\n      cursor: \"pointer\"\n    },\n    tableRowHover: {\n      \"&:hover\": {\n        backgroundColor: theme.palette.grey[200]\n      }\n    },\n    tableCell: {\n      flex: 1\n    },\n    noClick: {\n      cursor: \"initial\"\n    }\n  };\n};\n\nvar MuiVirtualizedTable =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MuiVirtualizedTable, _React$PureComponent);\n\n  function MuiVirtualizedTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MuiVirtualizedTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MuiVirtualizedTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getRowClassName\", function (_ref) {\n      var index = _ref.index;\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          onRowClick = _this$props.onRowClick;\n      return clsx(classes.tableRow, classes.flexContainer, _defineProperty({}, classes.tableRowHover, index !== -1 && onRowClick != null));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cellRenderer\", function (_ref2) {\n      var cellData = _ref2.cellData,\n          columnIndex = _ref2.columnIndex;\n      var _this$props2 = _this.props,\n          columns = _this$props2.columns,\n          classes = _this$props2.classes,\n          rowHeight = _this$props2.rowHeight,\n          onRowClick = _this$props2.onRowClick;\n      return __jsx(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, _defineProperty({}, classes.noClick, onRowClick == null)),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? \"right\" : \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, cellData);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"headerRenderer\", function (_ref3) {\n      var label = _ref3.label,\n          columnIndex = _ref3.columnIndex;\n      var _this$props3 = _this.props,\n          headerHeight = _this$props3.headerHeight,\n          columns = _this$props3.columns,\n          classes = _this$props3.classes;\n      return __jsx(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? \"right\" : \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, label));\n    });\n\n    return _this;\n  }\n\n  _createClass(MuiVirtualizedTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          classes = _this$props4.classes,\n          columns = _this$props4.columns,\n          rowHeight = _this$props4.rowHeight,\n          headerHeight = _this$props4.headerHeight,\n          tableProps = _objectWithoutProperties(_this$props4, [\"classes\", \"columns\", \"rowHeight\", \"headerHeight\"]);\n\n      return __jsx(AutoSizer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, function (_ref4) {\n        var height = _ref4.height,\n            width = _ref4.width;\n        return __jsx(Table, _extends({\n          height: height,\n          width: width,\n          rowHeight: rowHeight,\n          headerHeight: headerHeight\n        }, tableProps, {\n          rowClassName: _this2.getRowClassName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), columns.map(function (_ref5, index) {\n          var dataKey = _ref5.dataKey,\n              other = _objectWithoutProperties(_ref5, [\"dataKey\"]);\n\n          return __jsx(Column, _extends({\n            key: dataKey,\n            headerRenderer: function headerRenderer(headerProps) {\n              return _this2.headerRenderer(_objectSpread({}, headerProps, {\n                columnIndex: index\n              }));\n            },\n            className: classes.flexContainer,\n            cellRenderer: _this2.cellRenderer,\n            dataKey: dataKey\n          }, other, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }));\n        }));\n      });\n    }\n  }]);\n\n  return MuiVirtualizedTable;\n}(React.PureComponent);\n\n_defineProperty(MuiVirtualizedTable, \"defaultProps\", {\n  headerHeight: 48,\n  rowHeight: 48\n});\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    dataKey: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    numeric: PropTypes.bool,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\nvar VirtualizedTable = withStyles(styles)(MuiVirtualizedTable); // ---\n\nvar sample = [[\"Frozen yoghurt\", 159, 6.0, 24, 4.0], [\"Ice cream sandwich\", 237, 9.0, 37, 4.3], [\"Eclair\", 262, 16.0, 24, 6.0], [\"Cupcake\", 305, 3.7, 67, 4.3], [\"Gingerbread\", 356, 16.0, 49, 3.9]];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return {\n    id: id,\n    dessert: dessert,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar rows = [];\n\nfor (var i = 0; i < 200; i += 1) {\n  var randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData.apply(void 0, [i].concat(_toConsumableArray(randomSelection))));\n}\n\nexport default function ReactVirtualizedTable() {\n  return __jsx(Paper, {\n    style: {\n      height: 500,\n      padding: 20,\n      margin: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(VirtualizedTable, {\n    rowCount: rows.length,\n    rowGetter: function rowGetter(_ref6) {\n      var index = _ref6.index;\n      return rows[index];\n    },\n    columns: [{\n      width: \"20%\",\n      label: \"Dessert\",\n      dataKey: \"dessert\"\n    }, {\n      width: 120,\n      label: \"Calories\\xA0(g)\",\n      dataKey: \"calories\",\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Fat\\xA0(g)\",\n      dataKey: \"fat\",\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Carbs\\xA0(g)\",\n      dataKey: \"carbs\",\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Protein\\xA0(g)\",\n      dataKey: \"protein\",\n      numeric: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/danieltian/Desktop/Hack4Impact/javascript-base/components/Usertable.js"],"names":["React","PropTypes","clsx","withStyles","TableCell","Paper","AutoSizer","Column","Table","styles","theme","flexContainer","display","alignItems","boxSizing","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","index","props","classes","onRowClick","cellData","columnIndex","columns","rowHeight","height","numeric","label","headerHeight","tableProps","width","getRowClassName","map","dataKey","other","headerProps","headerRenderer","cellRenderer","PureComponent","propTypes","object","isRequired","arrayOf","shape","string","bool","number","func","VirtualizedTable","sample","createData","id","dessert","calories","fat","carbs","protein","rows","i","randomSelection","Math","floor","random","length","push","ReactVirtualizedTable","padding","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\n\nconst styles = theme => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  },\n  tableRow: {\n    cursor: \"pointer\"\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: \"initial\"\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? \"right\"\n            : \"left\"\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(\n          classes.tableCell,\n          classes.flexContainer,\n          classes.noClick\n        )}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            headerHeight={headerHeight}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\n// ---\n\nconst sample = [\n  [\"Frozen yoghurt\", 159, 6.0, 24, 4.0],\n  [\"Ice cream sandwich\", 237, 9.0, 37, 4.3],\n  [\"Eclair\", 262, 16.0, 24, 6.0],\n  [\"Cupcake\", 305, 3.7, 67, 4.3],\n  [\"Gingerbread\", 356, 16.0, 49, 3.9]\n];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return { id, dessert, calories, fat, carbs, protein };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData(i, ...randomSelection));\n}\n\nexport default function ReactVirtualizedTable() {\n  return (\n    <Paper style={{ height: 500, padding: 20, margin: 20 }}>\n      <VirtualizedTable\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n          {\n            width: \"20%\",\n            label: \"Dessert\",\n            dataKey: \"dessert\"\n          },\n          {\n            width: 120,\n            label: \"Calories\\u00A0(g)\",\n            dataKey: \"calories\",\n            numeric: true\n          },\n          {\n            width: 120,\n            label: \"Fat\\u00A0(g)\",\n            dataKey: \"fat\",\n            numeric: true\n          },\n          {\n            width: 120,\n            label: \"Carbs\\u00A0(g)\",\n            dataKey: \"carbs\",\n            numeric: true\n          },\n          {\n            width: 120,\n            label: \"Protein\\u00A0(g)\",\n            dataKey: \"protein\",\n            numeric: true\n          }\n        ]}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}