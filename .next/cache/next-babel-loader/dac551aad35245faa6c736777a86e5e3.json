{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/danieltian/Desktop/Hack4Impact/javascript-base/components/Usertable.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\n\nconst styles = theme => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  },\n  tableRow: {\n    cursor: \"pointer\"\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: \"initial\"\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getRowClassName\", ({\n      index\n    }) => {\n      const {\n        classes,\n        onRowClick\n      } = this.props;\n      return clsx(classes.tableRow, classes.flexContainer, {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      });\n    });\n\n    _defineProperty(this, \"cellRenderer\", ({\n      cellData,\n      columnIndex\n    }) => {\n      const {\n        columns,\n        classes,\n        rowHeight,\n        onRowClick\n      } = this.props;\n      return __jsx(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        }),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? \"right\" : \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, cellData);\n    });\n\n    _defineProperty(this, \"headerRenderer\", ({\n      label,\n      columnIndex\n    }) => {\n      const {\n        headerHeight,\n        columns,\n        classes\n      } = this.props;\n      return __jsx(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? \"right\" : \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, label));\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight\n    } = _this$props,\n          tableProps = _objectWithoutProperties(_this$props, [\"classes\", \"columns\", \"rowHeight\", \"headerHeight\"]);\n\n    return __jsx(AutoSizer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, ({\n      height,\n      width\n    }) => __jsx(Table, _extends({\n      height: height,\n      width: width,\n      rowHeight: rowHeight,\n      headerHeight: headerHeight\n    }, tableProps, {\n      rowClassName: this.getRowClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), columns.map((_ref, index) => {\n      let {\n        dataKey\n      } = _ref,\n          other = _objectWithoutProperties(_ref, [\"dataKey\"]);\n\n      return __jsx(Column, _extends({\n        key: dataKey,\n        headerRenderer: headerProps => this.headerRenderer(_objectSpread({}, headerProps, {\n          columnIndex: index\n        })),\n        className: classes.flexContainer,\n        cellRenderer: this.cellRenderer,\n        dataKey: dataKey\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\n_defineProperty(MuiVirtualizedTable, \"defaultProps\", {\n  headerHeight: 48,\n  rowHeight: 48\n});\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    dataKey: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    numeric: PropTypes.bool,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable); // ---\n\nconst sample = [[\"Frozen yoghurt\", 159, 6.0, 24, 4.0], [\"Ice cream sandwich\", 237, 9.0, 37, 4.3], [\"Eclair\", 262, 16.0, 24, 6.0], [\"Cupcake\", 305, 3.7, 67, 4.3], [\"Gingerbread\", 356, 16.0, 49, 3.9]];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return {\n    id,\n    dessert,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData(i, ...randomSelection));\n}\n\nexport default function ReactVirtualizedTable() {\n  return __jsx(Paper, {\n    style: {\n      height: 500,\n      padding: 20,\n      margin: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(VirtualizedTable, {\n    rowCount: rows.length,\n    rowGetter: ({\n      index\n    }) => rows[index],\n    columns: [{\n      width: 200,\n      label: \"Dessert\",\n      dataKey: \"dessert\"\n    }, {\n      width: 120,\n      label: \"Calories\\u00A0(g)\",\n      dataKey: \"calories\",\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Fat\\u00A0(g)\",\n      dataKey: \"fat\",\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Carbs\\u00A0(g)\",\n      dataKey: \"carbs\",\n      numeric: true\n    }, {\n      width: 120,\n      label: \"Protein\\u00A0(g)\",\n      dataKey: \"protein\",\n      numeric: true\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/danieltian/Desktop/Hack4Impact/javascript-base/components/Usertable.js"],"names":["React","PropTypes","clsx","withStyles","TableCell","Paper","AutoSizer","Column","Table","styles","theme","flexContainer","display","alignItems","boxSizing","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","PureComponent","index","classes","onRowClick","props","cellData","columnIndex","columns","rowHeight","height","numeric","label","headerHeight","render","tableProps","width","getRowClassName","map","dataKey","other","headerProps","headerRenderer","cellRenderer","propTypes","object","isRequired","arrayOf","shape","string","bool","number","func","VirtualizedTable","sample","createData","id","dessert","calories","fat","carbs","protein","rows","i","randomSelection","Math","floor","random","length","push","ReactVirtualizedTable","padding","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AutoSizer, Column, Table } from \"react-virtualized\";\n\nconst styles = theme => ({\n  flexContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  },\n  tableRow: {\n    cursor: \"pointer\"\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: \"initial\"\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  static defaultProps = {\n    headerHeight: 48,\n    rowHeight: 48\n  };\n\n  getRowClassName = ({ index }) => {\n    const { classes, onRowClick } = this.props;\n\n    return clsx(classes.tableRow, classes.flexContainer, {\n      [classes.tableRowHover]: index !== -1 && onRowClick != null\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex }) => {\n    const { columns, classes, rowHeight, onRowClick } = this.props;\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        })}\n        variant=\"body\"\n        style={{ height: rowHeight }}\n        align={\n          (columnIndex != null && columns[columnIndex].numeric) || false\n            ? \"right\"\n            : \"left\"\n        }\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const { headerHeight, columns, classes } = this.props;\n\n    return (\n      <TableCell\n        component=\"div\"\n        className={clsx(\n          classes.tableCell,\n          classes.flexContainer,\n          classes.noClick\n        )}\n        variant=\"head\"\n        style={{ height: headerHeight }}\n        align={columns[columnIndex].numeric || false ? \"right\" : \"left\"}\n      >\n        <span>{label}</span>\n      </TableCell>\n    );\n  };\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            height={height}\n            width={width}\n            rowHeight={rowHeight}\n            headerHeight={headerHeight}\n            {...tableProps}\n            rowClassName={this.getRowClassName}\n          >\n            {columns.map(({ dataKey, ...other }, index) => {\n              return (\n                <Column\n                  key={dataKey}\n                  headerRenderer={headerProps =>\n                    this.headerRenderer({\n                      ...headerProps,\n                      columnIndex: index\n                    })\n                  }\n                  className={classes.flexContainer}\n                  cellRenderer={this.cellRenderer}\n                  dataKey={dataKey}\n                  {...other}\n                />\n              );\n            })}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      dataKey: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\n\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\n\n// ---\n\nconst sample = [\n  [\"Frozen yoghurt\", 159, 6.0, 24, 4.0],\n  [\"Ice cream sandwich\", 237, 9.0, 37, 4.3],\n  [\"Eclair\", 262, 16.0, 24, 6.0],\n  [\"Cupcake\", 305, 3.7, 67, 4.3],\n  [\"Gingerbread\", 356, 16.0, 49, 3.9]\n];\n\nfunction createData(id, dessert, calories, fat, carbs, protein) {\n  return { id, dessert, calories, fat, carbs, protein };\n}\n\nconst rows = [];\n\nfor (let i = 0; i < 200; i += 1) {\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\n  rows.push(createData(i, ...randomSelection));\n}\n\nexport default function ReactVirtualizedTable() {\n  return (\n    <Paper style={{ height: 500, padding: 20, margin: 20 }}>\n      <VirtualizedTable\n        rowCount={rows.length}\n        rowGetter={({ index }) => rows[index]}\n        columns={[\n          {\n            width: 200,\n            label: \"Dessert\",\n            dataKey: \"dessert\"\n          },\n          {\n            width: 120,\n            label: \"Calories\\u00A0(g)\",\n            dataKey: \"calories\",\n            numeric: true\n          },\n          {\n            width: 120,\n            label: \"Fat\\u00A0(g)\",\n            dataKey: \"fat\",\n            numeric: true\n          },\n          {\n            width: 120,\n            label: \"Carbs\\u00A0(g)\",\n            dataKey: \"carbs\",\n            numeric: true\n          },\n          {\n            width: 120,\n            label: \"Protein\\u00A0(g)\",\n            dataKey: \"protein\",\n            numeric: true\n          }\n        ]}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}